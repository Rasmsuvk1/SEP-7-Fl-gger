@page "/ViewOrder"
@using Domain.Models
@using DataBaseAccess.DBContext
@using Microsoft.EntityFrameworkCore

<h3>View Orders</h3>

@if (orders == null)
{
    <p>No orders to display</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Order ID</th>
            <th>Order creation date</th>
            <th>Delivery Method</th>
            <th>Customer</th>
            <th>Products</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in orders)
        {
            <tr>
                <td>@item.OrderId</td>
                <td>@item.PurchaseDate</td>
                <td>@item.DeliveryMethod</td>
             
            </tr>
        }
        </tbody>
    </table>
}
@if (!string.IsNullOrEmpty(msg))
{
    <label style="color: red">@msg</label>
}

@code
{
    private IEnumerable<Order>? orders;
    private string msg = "";

    private async Task LoadOrders()
    {
        throw new NotImplementedException();
    /* try
        {
            posts = await postService.GetAsync(null, null, null);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }*/
    }
    private readonly DatabaseContext _context;

    public ViewOrder(DatabaseContext context)
    {
        _context = context;
    }

    public async Task<List<ProductSalesRelation>> GetProductOrderEntriesAsync()
    {
    // Retrieve all entries from the ProductOrder table
        List<ProductSalesRelation> productOrderEntries = await _context.productSalesRelations.ToListAsync();

        return productOrderEntries;
    }
}
}
