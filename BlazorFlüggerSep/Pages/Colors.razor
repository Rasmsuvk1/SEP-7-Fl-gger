@using BlazorFlüggerSep.Shared.Components
@using Domain.DTOs
@using Domain.Models
@using HttpClients.ClientInterfaces

@inject IProductService ProductService

@page "/Colors"


<header>
    <h2 class="header2">Colors</h2>
</header>

<div class="filterContainer">
    <h3 class="header3">Filter Items</h3>
    
    <select id="category" class="filter" @bind="_selectedCategory">
        <option value="">All Paints</option>
        <option value="Deal">Deal</option>
        <option value="Room">Room</option>
        <option value="Bathroom">Bathroom</option>
        <option value="Facade">Facade</option>
        <option value="Garage">Garage</option>
        <option value="Wood">Wood</option>
        <option value="Window">Window</option>
    </select>
    <select id="price" class="filter" @bind="_priceFilter">
        <option value="">Sort By Price</option>
        <option value="High">Highest > Lowest</option>
        <option value="Low">Lowest > Highest</option>
    </select>
    <input class ="filterInput" placeholder="Color Name" @bind="_colorName"/>
    <button class="filterButton" @onclick="Filter">Filter</button>
</div>

<section>
    <h3 class="header3"> Our Colors, Your choice</h3>
    <div class="productContainer">
        @if (products != null){
        foreach (var p in products)
        {
            <!-- Img URL should be changed to the ones stored in the DB when it is implemented -->
            <ProductCard
                Index=@p.ProductId
                ImgURL="https://flugger-vanlose.dk/wp-content/uploads/2022/01/proeve.png" 
                ColorName=@p.ColorName
                Amount=@p.Amount
                Price=@p.Price
                Date=@p.ExpireDate/>
        }            
        }
        else
        {
            <h3 class="header3">Loading...</h3>
        }

    </div>


</section>
  <p>&copy; 2023 Flügger Marketplace. All rights reserved.</p>
@code {
        
    private List<Product>? products;
    private string _selectedCategory = "";
    private string _priceFilter = "";
    private string _colorName = "";
    
    
    //A method that runs when the page is initialized
    protected override async Task OnInitializedAsync()
    {
        products = await Get(null,null,null, 20, 1);
    }
    

    private async Task<List<Product>> Get(string? category, string? priceStart, string? color, int listSize, int pageNumber)
    {
        try
        {
            ProductListDto dto = new ProductListDto(category,priceStart,color, listSize,pageNumber); 
            return await ProductService.GetAsync(dto);
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            throw new Exception("No products were found!");
        }
        
    }

    
    private async Task Filter()
    {
        try
        {
            products = await Get(_selectedCategory, _priceFilter, _colorName, 20, 1);
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
    
    
}